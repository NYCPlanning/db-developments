name: Test - github hosted database
on:
  push:
  workflow_dispatch:
    inputs:
      rebuild:
        description: 'Would you like to rebuild DevDB? (yes/no) If no, set archive or export to yes.'
        required: false
        default: 'yes'
      export:
        description: 'Would you like to export the outputs and QAQC to DigitalOcean? (yes/no)'
        required: false
        default: 'no'
      archive:
        description: 'Would you like to archive developments and dcp_housing to EDM-DATA? (yes/no)'
        required: false
        default: 'no'
      weekly:
        description: 'Is this for weekly devdb? (yes/no)'
        required: false
        default: 'no'

  # Weekly Devdb Build for HED Dashboard
  schedule:
    - cron: '0 6 * * *'

jobs: 
  Build:
    name: Building ...
    if: >- 
      (
        github.event_name == 'push' &&
        ! contains(github.event.head_commit.message, '[skip]')
      ) || github.event_name != 'push'
    runs-on: ubuntu-20.04
    services:
      db:
        image: postgis/postgis:11-3.0-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devdb
        options: >-
          --shm-size=1g
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 25060:5432
    env:
      BUILD_ENGINE: postgresql://postgres:postgres@localhost:25060/devdb
      HED_BUILD_ENGINE: ${{ secrets.HED_BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2

      - name: config workflows
        id: config
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            echo "::set-output name=rebuild::${{  github.event.inputs.rebuild }}"
            echo "::set-output name=archive::${{  github.event.inputs.archive }}"
            echo "::set-output name=export::${{  github.event.inputs.export }}"
            echo "::set-output name=weekly::${{  github.event.inputs.weekly }}"
          else
            echo "::set-output name=rebuild::yes"
            echo "::set-output name=archive::no"
            echo "::set-output name=export::no"
            if [[ $GITHUB_EVENT_NAME == 'schedule' ]]; then
              echo "::set-output name=weekly::yes"
            else
              echo "::set-output name=weekly::no"
            fi
          fi
  
      - name: install dependencies ...
        run: |
          sudo apt update
          sudo apt install -y gdal-bin
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc alias set spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4

      - name: 1. dataloading for HED weekly builds
        if: >- 
          steps.config.outputs.weekly == 'yes' && 
          steps.config.outputs.rebuild == 'yes'
        run: ./devdb.sh dataloading weekly
      
      - name: 1. dataloading for EDM builds 
        if: >- 
          steps.config.outputs.rebuild == 'yes' &&
          steps.config.outputs.weekly == 'no'
        run: ./devdb.sh dataloading edm && ls -l

      - name: Clear cache
        run: rm -rf .library
        
      - name: 2. build dev_db ...
        if: steps.config.outputs.rebuild == 'yes'
        run: | 
          ./devdb.sh build
          ./devdb.sh aggregate

      - name: 3. qaqc dev_db ...
        if: steps.config.outputs.rebuild == 'yes'
        run: | 
          ./devdb.sh qaqc
      
      - name: 4. Export ...
        if: steps.config.outputs.weekly == 'no'
        run: |
          ./devdb.sh export
          ./devdb.sh upload
            
      - name: 5. Archive ...
        if: >- 
          steps.config.outputs.archive == 'yes' &&
          steps.config.outputs.weekly == 'no'
        run: ./devdb.sh archive
      
      - name: Export to EDM_DATA/devdb
        env:
          EDM_DATA_BUILD_ENGINE: ${{ secrets.EDM_DATA_BUILD_ENGINE }}
        if: always() && steps.config.outputs.weekly == 'no'
        run: |
          pg_dump $BUILD_ENGINE -O -c | psql $EDM_DATA_BUILD_ENGINE
      
      - name: Export to HED database
        if: >- 
          steps.config.outputs.weekly == 'yes' && 
          steps.config.outputs.rebuild == 'yes'
        run: |
          pg_dump -t export_devdb $BUILD_ENGINE -O -c | psql $HED_BUILD_ENGINE &
          pg_dump -t dcp_mappluto $BUILD_ENGINE -O -c | psql $HED_BUILD_ENGINE &
          pg_dump -t hpd_hny_units_by_building $BUILD_ENGINE -O -c | psql $HED_BUILD_ENGINE &
          wait 
          echo "done!"
