name: CI
on: [push]
jobs:
  skip:
    name: Build and test
    runs-on: self-hosted
    if: "contains(github.event.head_commit.message, '[build]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"
  _01_dataloading:
    name: dataloading - manual inputs & spatial boundries
    needs: skip
    container:
      image: sptkl/cook:latest
    runs-on: self-hosted
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      BUILD_ENGINE: ${{ secrets.BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
    steps:
      - uses: actions/checkout@v2
      - name: dataloading ..
        working-directory: developments_build
        shell: bash
        run: |
          psql $BUILD_ENGINE -f sql/drop_idx.sql
          python3 python/small_dataloading.py
          psql $BUILD_ENGINE -f sql/preprocessing.sql
  _02_1_build_devdb:
    name: build part 1
    needs: _01_dataloading
    container: 
      image: mdillon/postgis:latest
    runs-on: self-hosted
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      BUILD_ENGINE: ${{ secrets.BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
    steps:
      - uses: actions/checkout@v2
      - name: 02.1_build_devdb
        working-directory: developments_build
        shell: bash
        run: |
          ./02.1_build_devdb.sh
  _02_2_geocoding:
    name: geocoding
    needs: _02_1_build_devdb
    container: 
      image: sptkl/docker-geosupport:latest
    runs-on: self-hosted
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      BUILD_ENGINE: ${{ secrets.BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
    steps:
      - uses: actions/checkout@v2
      - name: geocoding ... 
        working-directory: developments_build
        shell: bash
        run: |
          python3 python/geocode.py
          psql $BUILD_ENGINE -f sql/geo_merge.sql
          psql $BUILD_ENGINE -f sql/geoaddress.sql
          psql $BUILD_ENGINE -f sql/geombbl.sql
          # psql $BUILD_ENGINE -f sql/export.sql
          psql $BUILD_ENGINE -f sql/latlong.sql
          psql $BUILD_ENGINE -f sql/spatialjoins.sql
          psql $BUILD_ENGINE -f sql/dedupe_job_number.sql
          psql $BUILD_ENGINE -f sql/dropmillionbin.sql
          psql $BUILD_ENGINE -f sql/pluto_merge.sql
      - name: build_yoyco ... 
        working-directory: developments_build
        shell: bash
        run: |
          psql $BUILD_ENGINE -f sql/devdb_yoyco.sql
          python3 python/yoy_table.py
          python3 python/yoy_table_corr.py
      - name: build_hny ... 
        working-directory: developments_build
        shell: bash
        run: |
          python3 python/geocode_hny.py
          echo 'starting to build HNY database'
          psql $BUILD_ENGINE -f sql/dob_hny_create.sql
          psql $BUILD_ENGINE -f sql/hny_create.sql
          psql $BUILD_ENGINE -f sql/hny_id.sql
          psql $BUILD_ENGINE -f sql/hny_job_lookup.sql
          psql $BUILD_ENGINE -f sql/hny_res_nb_match.sql
          psql $BUILD_ENGINE -f sql/hny_a1_nonres_match.sql
          psql $BUILD_ENGINE -f sql/hny_manual_geomerge.sql
          psql $BUILD_ENGINE -f sql/hny_manual_match.sql
          psql $BUILD_ENGINE -f sql/hny_job_relat.sql
          psql $BUILD_ENGINE -f sql/hny_many_to_many_qc.sql
          psql $BUILD_ENGINE -f sql/hny_dob_match.sql
          psql $BUILD_ENGINE -f sql/dob_hny_id.sql
          psql $BUILD_ENGINE -f sql/dob_affordable_units.sql
      - name: aggregate census tracts
        working-directory: developments_build
        shell: bash
        run: python3 python/aggregate_ct.py
  _03_export_qaqc_archive:
    name: export and archive
    needs: _02_2_geocoding
    container: 
      image: mdillon/postgis:latest
    runs-on: self-hosted
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      BUILD_ENGINE: ${{ secrets.BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: 02.1_build_devdb
        working-directory: developments_build
        shell: bash
        run: |
          ./03_export.sh
          ./04_qaqc.sh
          # ./05_archive.sh