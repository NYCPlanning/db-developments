name: Build
on: [push]
jobs: 
  Build:
    name: Building ...
    if: contains(github.event.head_commit.message, '[build]') || contains(github.event.head_commit.message, '[export]')
    runs-on: self-hosted
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      BUILD_ENGINE: ${{ secrets.BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies ...
        run: |
          sudo apt update
          sudo apt install -y curl zip

          sudo tee /etc/apt/sources.list.d/pgdg.list <<END
          deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
          END

          # get the signing key and import it
          curl -O https://www.postgresql.org/media/keys/ACCC4CF8.asc
          sudo apt-key add ACCC4CF8.asc

          sudo apt update
          sudo apt install -y postgresql-client-11 gdal-bin
          sudo apt autoremove

          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc alias set spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4

      - name: 1. dataloading ...
        if: "! contains(github.event.head_commit.message, '[export]')"
        working-directory: developments_build
        run: ./01_dataloading.sh

      - name: 2. build dev_db ...
        if: "! contains(github.event.head_commit.message, '[export]')"
        working-directory: developments_build
        run: ./02_build_devdb.sh

      - name: 3. export ...
        working-directory: developments_build
        run: ./03_export.sh

      - name: 4. archive ...
        working-directory: developments_build
        run: ./04_archive.sh
    
      - name: 5. clean up ...
        working-directory: developments_build
        run: sudo rm -rf python/utils/__pycache__
